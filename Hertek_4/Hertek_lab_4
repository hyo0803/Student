<!DOCTYPE html>
<html>

<head>
    <meta charset="utf-8">
    <title>Lab4</title>
    <script crossorigin src="https://unpkg.com/react@16/umd/react.production.min.js"></script>
    <script crossorigin src="https://unpkg.com/react-dom@16/umd/react-dom.production.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/babel-standalone/6.25.0/babel.min.js"></script>
</head>

<body>
    <script type="text/babel">
        ReactDOM.render(
        <h1>Hello React</h1>, document.getElementById('1'))
    </script>
    <div id='1'></div>

    <script type="text/babel">
        function Hello(){ ReactDOM.render(
        <h1>Hello React 2</h1>, document.getElementById('2')) }; Hello()
    </script>
    <div id='2'></div>

    <script type="text/babel">
        var Hello=()=>{ ReactDOM.render(
        <h1>Hello React 3</h1>, document.getElementById('3')) }; Hello()
    </script>
    <div id='3'></div>

    <script type="text/babel">
        class Hello extends React.Component{ render(){ return (
        <h1>Hello React 4</h1>) } }; ReactDOM.render(
        <Hello />, document.getElementById('4'))
    </script>
    <div id='4'></div>

    <script type="text/babel">
        const sales = {'font-size': '30px', 'font-family':'Rockwell', 'color':'#8b0000'}; class Sale extends React.Component{ constructor(props){ super(props); this.state = {seconds: 500}; } tick(){ this.setState(state=>({ seconds: state.seconds - 1 })); } componentDidMount(){
        this.interval = setInterval(()=> this.tick(), 1000); } componentWillUnmount(){ clearInterval(this.interval); } render(){ return (
        <div class='d-flex flex-column'>
            <p style={sales}>До конца акции: {this.state.seconds}</p>
            <img src='honey.png' />
        </div>
        ) } } ReactDOM.render(
        <Sale/>, document.getElementById('sale') )
    </script>
    <div id='sale'></div>


</body>

</html>
